{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../ArtilleryChart.svelte",
    "../../ArtilleryDetailTable.svelte",
    "../../ArtilleryDetailsCard.svelte",
    "../../BuildList.svelte",
    "../../BuildDetailsCard.svelte",
    "../../DetailListCard.svelte",
    "../../HTMLHintDetailsCard.svelte",
    "../../HtmlErrorsTable.svelte",
    "../../LighthouseDetailsCard.svelte",
    "../../DetailsTable.svelte",
    "../../LoadingCircle.svelte",
    "../../LoadingFlat.svelte",
    "../../Modal.svelte",
    "../../SocialLogin.svelte",
    "../../Spinner.svelte",
    "../../TextField.svelte",
    "../../TooltipFromAction.svelte",
    "../../UpdateIgnoreUrl.svelte",
    "../../Layout.svelte",
    "../../Rules.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import {onMount} from 'svelte';\n    import { format } from 'date-fns';\n\n    export let value;\n  \n    let latencyMedian = [];\n    let latencyP95 = [];\n    let latencyP99 = [];\n    let timestamp = [];\n    \n    value.forEach(i => {\n        if (i.fullLatencyMedian !== null ||\n        i.fullLatencyP99 !== null ||\n        i.fullLatencyP99 !== null) \n        {\n            timestamp.push(format(new Date(i.fullTimestamp), 'HH:mm:ss'));\n            latencyMedian.push(i.fullLatencyMedian);\n            latencyP99.push(i.fullLatencyP99);\n            latencyP95.push(i.fullLatencyP95)\n        }\n    })\n\n    let data = {\n        labels: timestamp,\n        datasets: [{\n            label: 'latency Median',\n            data: latencyMedian, \n            fill: false,\n            borderColor: 'orange',\n            borderWidth: 1 \n        }, {\n            label: 'latency P95',\n            data: latencyP95,\n            fill: false,\n            borderColor: 'green',\n            borderWidth: 1 \n        }, {\n            label: 'latency P99',\n            data: latencyP99,\n            fill: false,\n            borderColor: 'red',\n            borderWidth: 1 \n        }]\n        };\n    \n    let options = {\n        responsive: true, \n        maintainAspectRatio: false,\n        scales: {\n            yAxes: [{\n            scaleLabel: {\n                display: true,\n                labelString: 'Millisecond (ms)'\n            }\n            }],\n            xAxes: [{\n            scaleLabel: {\n                display: true,\n                labelString: 'Time (hh:mm:ss)'\n            }\n            }]\n        },};\n\n    let chartRef;\n    onMount(() => {\n        Chart.Line(chartRef, {\n        options: options,\n        data: data\n        });\n    });\n    \n</script>\n\n<style>\n.wrapper {\nheight: 500px;\n}\n</style>\n\n<div class=\"wrapper\">\n<canvas bind:this={chartRef} width=\"600\" height=\"250\"></canvas>\n</div>\n",
    "<script>\n  import { format } from \"date-fns\";\n  import formatDistanceToNow from \"date-fns/formatDistanceToNow\";\n  export let value = {};\n\n  let details = value.summary;\n</script>\n\n<style>\nhr {\n  border-top: 0.5px solid #e8e8e8;\n}\n</style>\n\n<div\n  class=\"grid gap-x-12 md:gap-x-20 gap-y-4 grid-flow-row grid-cols-6 my-5 font-sans text-gray-700\">\n  <div class=\"col-span-7 font-bold\">\n    Report completed:\n    {formatDistanceToNow(new Date(details.buildDate), { addSuffix: true })}\n    at\n    {format(new Date(details.buildDate), 'hh:mm')}\n  </div>\n  <div class=\"col-span-2\">\n    <h5 class=\"float-left\">Scenarios launched</h5>\n    <div class=\"text-right float-right font-bold\">\n      {details.scenariosCreated}\n    </div>\n  </div>\n  <div class=\"col-span-4 font-bold\">Request Latency</div>\n  <div class=\"col-span-2\">\n    <hr />\n  </div>\n  <div class=\"col-span-4\">\n    <hr />\n  </div>\n  <div class=\"col-span-2\">\n    <h5 class=\"float-left\">Scenarios completed</h5>\n    <div class=\"text-right float-right font-bold\">\n      {details.scenariosCompleted}\n    </div>\n  </div>\n  <div class=\"col-span-2\">\n    <h5 class=\"float-left\">Min</h5>\n    <div class=\"text-right float-right font-bold\">\n      {details.latencyMin}\n      (ms)\n    </div>\n  </div>\n  <div class=\"col-span-2\">\n    <h5 class=\"float-left\">Max</h5>\n    <div class=\"text-right float-right font-bold\">\n      {details.latencyMax}\n      (ms)\n    </div>\n  </div>\n  <div class=\"col-span-2\">\n    <hr />\n  </div>\n  <div class=\"col-span-2\">\n    <hr />\n  </div>\n  <div class=\"col-span-2\">\n    <hr />\n  </div>\n  <div class=\"col-span-2\">\n    <h5 class=\"float-left\">Requests completed</h5>\n    <div class=\"text-right float-right font-bold\">\n      {details.requestsCompleted}\n    </div>\n  </div>\n  <div class=\"col-span-2\">\n    <h5 class=\"float-left\">Median</h5>\n    <div class=\"text-right float-right font-bold\">\n      {details.latencyMedian}\n      (ms)\n    </div>\n  </div>\n  <div class=\"col-span-2\" />\n  <div class=\"col-span-2\">\n    <hr />\n  </div>\n  <div class=\"col-span-2\">\n    <hr />\n  </div>\n  <div class=\"col-span-2\" />\n  <div class=\"col-span-2\">\n    <h5 class=\"float-left\">RPS sent</h5>\n    <div class=\"text-right float-right font-bold\">{details.rpsCount}</div>\n  </div>\n  <div class=\"col-span-2\">\n    <h5 class=\"float-left\">p95</h5>\n    <div class=\"text-right float-right font-bold\">\n      {details.latencyP95}\n      (ms)\n    </div>\n  </div>\n  <div class=\"col-span-2\">\n    <h5 class=\"float-left\">p99</h5>\n    <div class=\"text-right float-right font-bold\">\n      {details.latencyP99}\n      (ms)\n    </div>\n  </div>\n  <div class=\"col-span-2\">\n    <hr />\n  </div>\n  <div class=\"col-span-2\">\n    <hr />\n  </div>\n  <div class=\"col-span-2\">\n    <hr />\n  </div>\n</div>\n",
    "<script>\n  import LighthouseSummary from \"../summaryitemcomponents/LighthouseSummary.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  import CodeSummary from \"../summaryitemcomponents/CodeSummary.svelte\";\n  import LinkSummary from \"../summaryitemcomponents/LinkSummary.svelte\";\n  import ArtillerySummary from \"../summaryitemcomponents/ArtillerySummary.svelte\";\n\n  export let build = {};\n  let val = build.summary;\n  let brokenLinks = build.brokenLinks;\n\n  const dispatch = createEventDispatcher();\n  const artilleryThreshold = () => dispatch(\"artilleryThreshold\");\n</script>\n\n<style>\nh2 {\n  text-align: left;\n  border-bottom: 1px dotted #000;\n  line-height: 0.1em;\n  margin-bottom: 15px;\n}\n\nh2 span {\n  background: #fff;\n  padding-left: 0px;\n  padding-right: 10px;\n}\n</style>\n\n<div class=\"overflow-hidden shadow-lg my-5\">\n  {#if val.finalEval == 'FAIL'}\n    <div class=\"bg-red-500 h-2\" />\n  {:else if val.finalEval == 'PASS'}\n    <div class=\"bg-green-500 h-2\" />\n  {:else}\n    <div class=\"bg-orange-500 h-2\" />\n  {/if}\n\n  <div class=\"px-6 py-2\">\n    <div class=\"grid grid-cols-6\">\n      <div></div>\n      <div class=\"grid grid-rows-3 col-span-4\">\n        <div class=\"md:row-span-1 text-sm my-2\">\n          <h2><span class=\"font-bold font-sans text-gray-600\">LINKS</span></h2>\n          <LinkSummary value={val} brokenLinks={brokenLinks.length}/>\n        </div>\n  \n        <div class=\"md:row-span-1 text-sm my-2\">\n          <h2><span class=\"font-bold font-sans text-gray-600\">CODE</span></h2>\n          <CodeSummary value={val} />\n        </div>\n  \n        {#if val.performanceScore}\n          <div class=\"md:row-span-1 text-sm my-2\">\n            <h2>\n              <span class=\"font-bold font-sans text-gray-600\">LIGHTHOUSE</span>\n            </h2>\n            <LighthouseSummary value={val} />\n          </div>\n        {/if}\n  \n        <div class=\"md:row-span-1 text-sm my-2\">\n          <h2>\n            <span class=\"font-bold font-sans text-gray-600\">LOAD TEST</span>\n          </h2>\n          <ArtillerySummary value={val} />\n        </div>\n      </div>\n      <div></div>\n    </div>\n\n    <div class=\"text-left\">\n      <span class=\"font-sans text-lg pt-2\">\n        Build Version: {val.buildVersion}\n      </span>\n    </div>\n    \n  </div>\n</div>\n",
    "<script>\n  import formatDistanceToNow from \"date-fns/formatDistanceToNow\";\n  import addDays from \"date-fns/addDays\";\n  import DetailListCard from \"../detailcardcomponents/DetailListCard.svelte\";\n  import HistoryChart from \"./HistoryChart.svelte\";\n  import UrlSummaryCard from \"./UrlSummaryCard.svelte\";\n  import { groupBy, props } from \"ramda\";\n  import { historyChartType } from \"../../utils/utils\";\n\n  export let builds = [];\n  export let lastBuild;\n\n  let showTotalBuild = false;\n  let groupUrlKey = [];\n  let groupUrl;\n  groupUrl = groupBy(props([\"url\"]))(builds);\n  groupUrlKey = Object.keys(groupUrl);\n\n  $: numberOfBuilds = builds.length;\n  let count = builds.filter(\n    x => new Date(x.buildDate) > addDays(new Date(), -30)\n  ).length;\n\n  let currCard;\n  function toggle(n) {\n    currCard = n;\n    showTotalBuild = !showTotalBuild;\n    var x = document.getElementById(\"detailCard\");\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n  }\n</script>\n\n<style>\n.btn {\n  border: none;\n  color: black;\n  padding: 5px 10px;\n  transition: 0.3s;\n}\n\n.btn:hover {\n  background-color: #d5d5d5;\n  color: white;\n}\n.container {\n  transition: 0.3s;\n}\n\n.container:hover {\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n}\n</style>\n\n{#if numberOfBuilds === 0}\n  <div class=\"md:flex md:items-center mb-6\">You have 0 scans!</div>\n{:else}\n  <div class=\"md:flex md:items-center mb-6\">\n    <div class=\"md:w-1/8\">\n      {#if lastBuild}\n        <label\n          class=\"block text-gray-700 font-bold md:text-right mb-1 md:mb-0 pr-4\"\n          for=\"inline-full-name\">\n          {count} builds in last 30 days, last build: {formatDistanceToNow(\n            lastBuild,\n            { addSuffix: true }\n          )}\n        </label>\n      {/if}\n    </div>\n  </div>\n\n  {#each groupUrlKey as url, i}\n    <div class=\"grid grid-rows-2 gap-y-1\">\n      <div class=\"row-span-2\">\n        <div class=\"container flex-wrap mb-4 overflow-hidden border\">\n          <div\n            class=\"sm:flex-1 md:flex-1 lg:flex xl:flex content-center mb-4 px-6\n            py-4\">\n            <div class=\"xl:w-4/6 lg:w-5/6\">\n              <UrlSummaryCard value={groupUrl[url]} {url} />\n            </div>\n\n            <div\n              class=\"xl:w-1/4 lg:w-1/4 h-20 hidden sm:hidden md:hidden lg:block\n              xl:block\">\n              <HistoryChart value={groupUrl[url]} dataType={historyChartType.BadLinks} />\n            </div>\n\n            <div\n              class=\"xl:w-1/4 lg:w-1/4 h-20 hidden sm:hidden md:hidden lg:block\n              xl:block ml-5\">\n              <HistoryChart value={groupUrl[url]} dataType={historyChartType.WarningCode} />\n            </div>\n\n            <div\n              class=\"xl:w-1/4 lg:w-1/4 h-20 hidden sm:hidden md:hidden lg:block\n              xl:block ml-5 mr-5\">\n              <HistoryChart value={groupUrl[url]} dataType={historyChartType.ErrorCode} />\n            </div>\n\n            <div class=\"xl:w-1/6 lg:w-1/6 text-center\">\n              <span\n                type=\"button\"\n                class=\"hover:bg-gray-300 border-0 rounded-md px-3 py-1\"\n                on:click={() => toggle(i)}>\n                {#if showTotalBuild}\n                  <i class=\"fas fa-angle-up\"></i>\n                {:else}\n                  <i class=\"fas fa-angle-down\"></i>\n                {/if}\n              </span>\n              <p class=\"truncate font-sans font-bold text-xs\">\n                Scan History:\n                {groupUrl[url].length}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      {#if currCard == i}\n        <div id=\"detailCard\">\n          <DetailListCard value={groupUrl[url]} />\n        </div>\n      {/if}\n    </div>\n  {/each}\n{/if}\n",
    "<script>\n  import { getCodeSummary } from \"../../utils/utils\";\n  import { navigateTo } from \"svelte-router-spa\";\n  import LighthouseSummary from \"../summaryitemcomponents/LighthouseSummary.svelte\";\n  import CodeSummary from \"../summaryitemcomponents/CodeSummary.svelte\";\n  import LinkSummary from \"../summaryitemcomponents/LinkSummary.svelte\";\n  import ArtillerySummary from \"../summaryitemcomponents/ArtillerySummary.svelte\";\n\n  export let build = {};\n  let val = build.summary;\n  let brokenLinks = build.brokenLinks;\n  $: codeSummary = getCodeSummary(build);\n</script>\n\n<style>\nh2 {\n  text-align: left;\n  border-bottom: 1px dotted #000;\n  line-height: 0.1em;\n  margin-bottom: 15px;\n}\n\nh2 span {\n  background: #fff;\n  padding-left: 0px;\n  padding-right: 10px;\n}\n</style>\n\n<div class=\"overflow-hidden shadow-lg my-5\">\n  {#if val.finalEval === 'FAIL'}\n    <div class=\"bg-red-500 h-2\" />\n  {:else if val.finalEval === 'PASS'}\n    <div class=\"bg-green-500 h-2\" />\n  {:else}\n    <div class=\"bg-orange-500 h-2\" />\n  {/if}\n\n  <div class=\"px-6 py-2\">\n    <div class=\"grid grid-cols-6\">\n      <div></div>\n      <div\n        class=\"grid grid-rows-3 col-span-4\"\n        on:click={() => navigateTo(`/build/${val.runId}`)}>\n        <div\n          class=\"md:row-span-1 text-sm my-2\"\n          on:click={() => navigateTo(`/build/${val.runId}`)}>\n          <h2><span class=\"font-bold font-sans text-gray-600\">LINKS</span></h2>\n          <LinkSummary value={val} brokenLinks={brokenLinks.length} />\n        </div>\n  \n        <div\n          class=\"md:row-span-1 text-sm my-2\"\n          on:click={() => navigateTo(`/build/${val.runId}`)}>\n          <h2><span class=\"font-bold font-sans text-gray-600\">CODE</span></h2>\n          <CodeSummary value={val} />\n        </div>\n  \n        {#if val.performanceScore}\n          <div\n            class=\"md:row-span-1 text-sm my-2\"\n            on:click={() => navigateTo(`/build/${val.runId}`)}>\n            <h2>\n              <span class=\"font-bold font-sans text-gray-600\">LIGHTHOUSE</span>\n            </h2>\n            <LighthouseSummary value={val} />\n          </div>\n        {/if}\n  \n        <div\n          class=\"md:row-span-1 text-sm my-2\"\n          on:click={() => navigateTo(`/build/${val.runId}`)}>\n          <h2>\n            <span class=\"font-bold font-sans text-gray-600\">LOAD TEST</span>\n          </h2>\n          <ArtillerySummary value={val} />\n        </div>\n      </div>\n      <div></div>\n    </div>\n\n    <div class=\"text-left\">\n      <span class=\"font-sans text-lg pt-2\">\n        Build Version: {val.buildVersion}\n      </span>\n    </div>\n  </div>\n</div>\n",
    "<script>\n  import CodeSummary from \"../summaryitemcomponents/CodeSummary.svelte\";\n  import LinkSummary from \"../summaryitemcomponents/LinkSummary.svelte\";\n  import LighthouseSummary from \"../summaryitemcomponents/LighthouseSummary.svelte\";\n  import ArtillerySummary from \"../summaryitemcomponents/ArtillerySummary.svelte\";\n  import { navigateTo } from \"svelte-router-spa\";\n  import { format } from \"date-fns\";\n  import formatDistanceToNow from \"date-fns/formatDistanceToNow\";\n  import { printTimeDiff } from \"../../utils/utils\";\n\n  export let value = {};\n\n  function numberWithCommas(x) {\n    return x.toLocaleString()\n  }\n\n</script>\n\n<style>\nh2 {\n  text-align: left;\n  border-bottom: 1px dotted #000;\n  line-height: 0.1em;\n  margin-bottom: 15px;\n}\n\nh2 span {\n  background: #fff;\n  padding-left: 0px;\n  padding-right: 10px;\n}\n\n.container {\n  transition: 0.3s;\n}\n\n.container:hover {\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n}\n</style>\n\n{#each value as val}\n  <div class=\"container overflow-hidden shadow-lg my-2\">\n    {#if val.finalEval === 'FAIL'}\n      <div class=\"bg-red-500 h-2\" />\n    {:else if val.finalEval === 'PASS'}\n      <div class=\"bg-green-500 h-2\" />\n    {:else}\n      <div class=\"bg-orange-500 h-2\" />\n    {/if}\n\n    <div class=\"px-6 py-2\">\n      <div\n        class=\"grid grid-rows-2 sm:gap-auto lg:grid-flow-col sm:grid-cols-3 ml-4\"\n        on:click={() => navigateTo(`/build/${val.runId}`)}>\n        <div class=\"row-span-1 lg:row-span-4 col-span-4\">\n          <span class=\"font-sans text-base font-bold text-gray-800 underline text-lg\">\n            {format(new Date(val.buildDate), 'dd MMM yyyy')}\n          </span>\n          <br />\n          <span class=\"font-sans text-base pt-2 text-lg\">\n            Last scanned:\n            {formatDistanceToNow(new Date(val.buildDate), { addSuffix: true })}\n            at\n            {format(new Date(val.buildDate), 'hh:mm aaaa')}\n          </span>\n          <br />\n          <span class=\"font-sans text-base pt-2 text-lg\">\n            Duration:\n            {printTimeDiff(+val.scanDuration)}\n          </span>\n          <br />\n          <span class=\"font-sans text-base pt-2 text-lg\">\n            Scanned:\n            {numberWithCommas(val.totalScanned)}\n            items\n          </span>\n        </div>\n\n        <div\n          class=\"row-span-1 col-span-4 text-sm my-2\"\n          on:click={() => navigateTo(`/build/${val.runId}`)}>\n          <h2>\n            <span class=\"font-bold font-sans text-gray-600\">LINKS</span>\n          </h2>\n          <LinkSummary value={val} brokenLinks={val.totalUnique404}/>\n        </div>\n\n        <div\n          class=\"row-span-1 col-span-4 text-sm my-2\"\n          on:click={() => navigateTo(`/build/${val.runId}`)}>\n          <h2>\n            <span class=\"font-bold font-sans text-gray-600\">CODE</span>\n          </h2>\n          <CodeSummary value={val} />\n        </div>\n\n        <div\n          class=\"row-span-1 col-span-4 text-sm my-2\"\n          on:click={() => navigateTo(`/build/${val.runId}`)}>\n          <h2>\n            <span class=\"font-bold font-sans text-gray-600\">LOAD TEST</span>\n          </h2>\n          <ArtillerySummary value={val} />\n        </div>\n\n        {#if val.performanceScore}\n          <div\n            class=\"row-span-1 col-span-4 text-sm my-2\"\n            on:click={() => navigateTo(`/build/${val.runId}`)}>\n            <h2>\n              <span class=\"font-bold font-sans text-gray-600\">LIGHTHOUSE</span>\n            </h2>\n            <LighthouseSummary value={val} />\n          </div>\n        {/if}\n      </div>\n\n      <div class=\"text-left\">\n        <span class=\"font-sans text-lg pt-2\">\n          Build Version: {val.buildVersion}\n        </span>\n      </div>\n      \n    </div>\n  </div>\n{/each}\n",
    "<script>\n  import LighthouseSummary from \"../summaryitemcomponents/LighthouseSummary.svelte\";\n  import CodeSummary from \"../summaryitemcomponents/CodeSummary.svelte\";\n  import LinkSummary from \"../summaryitemcomponents/LinkSummary.svelte\";\n  import ArtillerySummary from \"../summaryitemcomponents/ArtillerySummary.svelte\";\n  import { htmlHintRules, customHtmlHintRules } from \"../../utils/utils\";\n\n  export let build = {};\n  export let htmlRules;\n  let val = build.summary;\n  let brokenLinks = build.brokenLinks;\n\n  let isCollapsedRules = false\n  function handleClick() {\n    isCollapsedRules = !isCollapsedRules\n\t}\n</script>\n\n<style>\nh2 {\n  text-align: left;\n  border-bottom: 1px dotted #000;\n  line-height: 0.1em;\n  margin-bottom: 15px;\n}\n\nh2 span {\n  background: #fff;\n  padding-left: 0px;\n  padding-right: 10px;\n}\n</style>\n\n<div class=\"overflow-hidden shadow-lg my-5\">\n  {#if val.finalEval == 'FAIL'}\n    <div class=\"bg-red-500 h-2\" />\n  {:else if val.finalEval == 'PASS'}\n    <div class=\"bg-green-500 h-2\" />\n  {:else}\n    <div class=\"bg-orange-500 h-2\" />\n  {/if}\n\n  <div class=\"px-6 py-2\">\n    <div class=\"grid grid-cols-6\">\n      <div></div>\n      <div class=\"grid grid-rows-3 col-span-4\">\n        <div class=\"md:row-span-1 text-sm my-2\">\n          <h2><span class=\"font-bold font-sans text-gray-600\">LINKS</span></h2>\n          <LinkSummary value={val} brokenLinks={brokenLinks.length}/>\n        </div>\n  \n        <div class=\"md:row-span-1 text-sm my-2\">\n          <h2><span class=\"font-bold font-sans text-gray-600\">CODE</span></h2>\n          <CodeSummary value={val} />\n        </div>\n  \n        {#if val.performanceScore}\n          <div class=\"md:row-span-1 text-sm my-2\">\n            <h2>\n              <span class=\"font-bold font-sans text-gray-600\">LIGHTHOUSE</span>\n            </h2>\n            <LighthouseSummary value={val} />\n          </div>\n        {/if}\n  \n        <div class=\"md:row-span-1 text-sm my-2\">\n          <h2>\n            <span class=\"font-bold font-sans text-gray-600\">LOAD TEST</span>\n          </h2>\n          <ArtillerySummary value={val} />\n        </div>\n      </div>\n      <div></div>\n    </div>\n\n    <span class=\"font-sans text-lg pt-2\">\n      {#if htmlRules}\n        <p class=\"inline\">HTML Rules Scanned: {htmlRules.selectedRules.split(/[,]+/).length}</p>\n        <span type=\"button\" class=\"inline cursor-pointer\" on:click={handleClick}>\n          <i class=\"fas fa-angle-down\"></i>\n        </span>\n          {#if isCollapsedRules}\n            {#each htmlRules.selectedRules.split(/[,]+/) as rule}\n              <div class=\"ml-3\">\n                {#if customHtmlHintRules.some(x => x.rule === rule)}\n                  <a\n                    class=\"{(customHtmlHintRules.find(x => x.rule === rule)).ruleLink ? 'link' : 'hover:no-underline cursor-text'} inline-block align-baseline\"  \n                    href=\"{(customHtmlHintRules.find(x => x.rule === rule)).ruleLink}\"\n                  >\n                    {customHtmlHintRules.find(x => x.rule === rule).displayName}\n                  </a>\n                {:else if htmlHintRules.some(x => x.rule === rule)}\n                  <a \n                    class=\"{(htmlHintRules.find(x => x.rule === rule)).ruleLink ? 'link' : 'hover:no-underline cursor-text'} inline-block align-baseline\"  \n                    href=\"{(htmlHintRules.find(x => x.rule === rule)).ruleLink}\"\n                  >\n                    {htmlHintRules.find(x => x.rule === rule).displayName}\n                  </a>\n                {/if}\n              </div>\n            {/each}\n          {/if}\n      {/if}\n    </span>\n\n    <div class=\"text-left\">\n      <span class=\"font-sans text-lg pt-2\">\n        Build Version: {val.buildVersion}\n      </span>\n    </div>\n\n  </div>\n</div>\n",
    "<script>\n  import { updateQuery, CONSTS } from \"../../utils/utils.js\";\n  import Icon from \"../misccomponents/Icon.svelte\";\n  import Modal from \"../misccomponents/Modal.svelte\";\n  import LoadingFlat from \"../misccomponents/LoadingFlat.svelte\";\n  import ParsedQuery from \"query-string\";\n  import HtmlErrorsBySource from \"./HtmlErrorsBySource.svelte\";\n  import HtmlErrorsByReason from \"./HtmlErrorsByReason.svelte\";\n  import { onMount } from \"svelte\";\n  import { createEventDispatcher } from \"svelte\";\n\n  export let errors = [];\n  export let codeIssues = [];\n  export let currentRoute;\n\n  let displayMode = 0;\n  let viewUrlSource = \"\";\n  let viewLocation = \"\";\n  let ruleName = \"\";\n  let codeLocation = \"\";\n  let source;\n  let showSource;\n  let loading;\n  let codeViewer;\n  let codediv;\n  const dismiss = () => {\n    showSource = false;\n    codeViewer = null;\n    codediv.innerHTML = \"\";\n  };\n\n  const dispatch = createEventDispatcher();\n  const download = () => dispatch(\"download\");\n\n  function showSourceWindow() {\n    showSource = true;\n    setTimeout(() => {\n      const element = document.getElementById(\"codeEditor\");\n      console.log(\"element\", element);\n      codeViewer = window.CodeMirror(element, {\n        value: source,\n        mode: \"htmlmixed\",\n        lineNumbers: true,\n        styleSelectedText: true,\n        foldGutter: true,\n        gutters: [\"CodeMirror-linenumbers\"]\n      });\n      codeViewer.setSize(\"100%\", \"100%\");\n\n      const [line, char] = viewLocation.split(\":\");\n      codeViewer.scrollIntoView({ line: +line, char: +char }, 400);\n\n      codeViewer.markText(\n        { line: line - 1, ch: +char },\n        { line: line - 1, ch: +char + 50 },\n        { className: \"border border-red-500 bg-red-200\" }\n      );\n    }, 10);\n  }\n\n  async function viewPageSource(event) {\n    viewLocation = event.detail.location;\n    if (viewUrlSource === event.detail.url) {\n      showSourceWindow();\n      return;\n    }\n\n    viewUrlSource = event.detail.url;\n    ruleName = event.detail.key;\n    showSource = true;\n    loading = true;\n    const res = await fetch(\n      `${CONSTS.API2}/viewsource?url=${encodeURIComponent(viewUrlSource)}`\n    );\n    source = await res.text();\n    loading = false;\n    showSourceWindow();\n  }\n\n  async function viewCode(event) {\n    source = event.detail.snippet;\n    viewUrlSource = event.detail.url;\n    ruleName = event.detail.key;\n    codeLocation = event.detail.location;\n    viewLocation = \"4:0\";\n    showSourceWindow();\n  }\n\n  const changeMode = m => {\n    displayMode = m;\n    updateQuery(ParsedQuery.stringify({ displayMode }));\n  };\n\n  onMount(() => {\n    if (currentRoute && currentRoute.queryParams.displayMode) {\n      setTimeout(() => {\n        changeMode(+currentRoute.queryParams.displayMode);\n      }, 0);\n    }\n  });\n</script>\n\n<style>\n.active {\n  background: white;\n  color: #cc4141;\n}\n.active:focus {\n  color: #cc4141;\n}\n.active:visited {\n  color: #cc4141;\n}\n#codeEditor {\n  height: 100%;\n}\n</style>\n\n{#if errors.length === 0 && codeIssues.length === 0}\n  <div class=\"mb-6 text-center text-xl py-8\">\n    <Icon cssClass=\"inline-block\">\n      <path\n        d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13\n        21l-2.286-6.857L5 12l5.714-2.143L13 3z\" />\n    </Icon>\n    No HTML issues found in this build!!\n    <Icon cssClass=\"inline-block\">\n      <path\n        d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13\n        21l-2.286-6.857L5 12l5.714-2.143L13 3z\" />\n    </Icon>\n  </div>\n{:else}\n  <div class=\"my-4\">\n    <div\n      class=\"bg-gray-200 text-sm textgrey leading-none border-2 border-gray-200\n      rounded-full inline-flex\">\n      <button\n        on:click={() => changeMode(0)}\n        class:active={displayMode === 0}\n        class=\"inline-flex items-center transition-colors duration-300 ease-in\n        focus:outline-none hover:text-blue-400 focus:text-blue-400\n        rounded-l-full px-4 py-2\">\n        <span>By Page</span>\n      </button>\n      <button\n        on:click={() => changeMode(1)}\n        class:active={displayMode === 1}\n        class=\"inline-flex items-center transition-colors duration-300 ease-in\n        focus:outline-none hover:text-blue-400 focus:text-blue-400\n        rounded-r-full px-4 py-2\">\n        <span>By Reason</span>\n      </button>\n    </div>\n    <div class=\"float-right\">\n      <button\n        on:click={download}\n        title=\"Download CSV\"\n        class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-1 px-1\n        rounded-lg inline-flex items-center\">\n        <Icon cssClass=\"\">\n          <path\n            d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n        </Icon>\n      </button>\n    </div>\n  </div>\n\n  {#if displayMode === 0}\n    <HtmlErrorsBySource\n      {errors}\n      {codeIssues}\n      on:viewSource={viewPageSource}\n      on:viewCode={viewCode} />\n  {:else}\n    <HtmlErrorsByReason\n      {errors}\n      {codeIssues}\n      on:viewSource={viewPageSource}\n      on:viewCode={viewCode} />\n  {/if}\n{/if}\n\n<Modal\n  bind:show={showSource}\n  header={ruleName + ': ' + viewUrlSource}\n  on:dismiss={dismiss}\n  full={true}>\n  {#if loading}\n    <LoadingFlat />\n  {/if}\n  <div id=\"codeEditor\" bind:this={codediv} class:border={!loading} />\n</Modal>\n",
    "<script>\n  import LighthouseSummary from \"../summaryitemcomponents/LighthouseSummary.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  import CodeSummary from \"../summaryitemcomponents/CodeSummary.svelte\";\n  import LinkSummary from \"../summaryitemcomponents/LinkSummary.svelte\";\n  import ArtillerySummary from \"../summaryitemcomponents/ArtillerySummary.svelte\";\n\n  export let build = {};\n  let val = build.summary;\n  let brokenLinks = build.brokenLinks;\n\n  const dispatch = createEventDispatcher();\n  const perfThreshold = () => dispatch(\"perfThreshold\");\n</script>\n\n<style>\nh2 {\n  text-align: left;\n  border-bottom: 1px dotted #000;\n  line-height: 0.1em;\n  margin-bottom: 15px;\n}\n\nh2 span {\n  background: #fff;\n  padding-left: 0px;\n  padding-right: 10px;\n}\n</style>\n\n<div class=\"overflow-hidden shadow-lg my-5\">\n  {#if val.finalEval == 'FAIL'}\n    <div class=\"bg-red-500 h-2\" />\n  {:else if val.finalEval == 'PASS'}\n    <div class=\"bg-green-500 h-2\" />\n  {:else}\n    <div class=\"bg-orange-500 h-2\" />\n  {/if}\n\n  <div class=\"px-6 py-2\">\n    <div class=\"grid grid-rows-2 grid-flow-col\">\n      <div class=\"row-span-4 col-span-2\">\n        <br />\n        <br />\n        {#if val.buildDate}\n          <button\n            on:click={perfThreshold}\n            class=\"bgred hover:bg-red-800 text-white font-semibold py-2 px-4\n              border hover:border-transparent rounded\">\n            <span class=\"ml-2\">Set Performance Threshold For Next Scan</span>\n          </button>\n        {/if}\n      </div>\n\n      <div class=\"row-span-1 text-sm my-2\">\n        <h2><span class=\"font-bold font-sans text-gray-600\">LINKS</span></h2>\n        <LinkSummary value={val} brokenLinks={brokenLinks.length} />\n      </div>\n\n      <div class=\"row-span-1 text-sm my-2\">\n        <h2><span class=\"font-bold font-sans text-gray-600\">CODE</span></h2>\n        <CodeSummary value={val} />\n      </div>\n\n      {#if val.performanceScore}\n        <div class=\"row-span-1 text-sm my-2\">\n          <h2>\n            <span class=\"font-bold font-sans text-gray-600\">LIGHTHOUSE</span>\n          </h2>\n          <LighthouseSummary value={val} />\n        </div>\n      {/if}\n\n      <div class=\"row-span-1 text-sm my-2\">\n        <h2>\n          <span class=\"font-bold font-sans text-gray-600\">LOAD TEST</span>\n        </h2>\n        <ArtillerySummary value={val} />\n      </div>\n    </div>\n\n    <div class=\"text-left\">\n      <span class=\"font-sans text-lg pt-2\">\n        Build Version: {val.buildVersion}\n      </span>\n    </div>\n    \n  </div>\n</div>\n",
    "<script>\n  import DetailsByDest from \"./DetailsByDest.svelte\";\n  import { updateQuery } from \"../../utils/utils.js\";\n  import Icon from \"../misccomponents/Icon.svelte\";\n  import ParsedQuery from \"query-string\";\n  import DetailsBySource from \"./DetailsBySource.svelte\";\n  import DetailsByReason from \"./DetailsByReason.svelte\";\n  import { onMount } from \"svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  import { fade } from \"svelte/transition\";\n\n  export let builds = [];\n  export let currentRoute;\n  export let unscannableLinks;\n  \n  let foundUnscannableLinks = [];\n  foundUnscannableLinks = builds.filter(build => unscannableLinks.some(link => build.dst.includes(link.url)));\n  \n  // Filter out unscannable links\n  builds = builds.filter(build => !unscannableLinks.some(link => build.dst.includes(link.url)));\n\n  // Filter out broken link with same destination as source\n  // builds = builds.map(build => {\n  //   console.log(build.src)\n  //   console.log(build.dst)\n  // });\n\n  let displayMode = 0;\n\n  const changeMode = m => {\n    displayMode = m;\n    updateQuery(ParsedQuery.stringify({ displayMode }));\n  };\n\n  const dispatch = createEventDispatcher();\n  const download = () => dispatch(\"download\");\n\n  onMount(() => {\n    if (currentRoute && currentRoute.queryParams.displayMode) {\n      changeMode(+currentRoute.queryParams.displayMode);\n    }\n  });\n\n  let hiddenRows = false;\n  const hideShow = () => {\n    hiddenRows = !hiddenRows\n  }\n</script>\n\n<style>\n.active {\n  background: white;\n  color: #cc4141;\n}\n.active:focus {\n  color: #cc4141;\n}\n.active:visited {\n  color: #cc4141;\n}\n</style>\n\n{#if builds.length === 0}\n  <div class=\"mb-6 text-center text-xl py-8\">\n    <Icon cssClass=\"inline-block\">\n      <path\n        d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13\n        21l-2.286-6.857L5 12l5.714-2.143L13 3z\" />\n    </Icon>\n    No broken links in this build!\n    <Icon cssClass=\"inline-block\">\n      <path\n        d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13\n        21l-2.286-6.857L5 12l5.714-2.143L13 3z\" />\n    </Icon>\n  </div>\n{:else}\n  <div class=\"my-4\">\n    <div\n      class=\"bggrey text-sm textgrey leading-none border-2 border-gray-200\n      rounded-full inline-flex\">\n      <button\n        on:click={() => changeMode(0)}\n        class:active={displayMode === 0}\n        class=\"inline-flex items-center transition-colors duration-300 ease-in\n        focus:outline-none rounded-l-full px-4 py-2\">\n        <span>By Source</span>\n      </button>\n      <button\n        on:click={() => changeMode(1)}\n        class:active={displayMode === 1}\n        class=\"inline-flex items-center transition-colors duration-300 ease-in\n        focus:outline-none px-4 py-2\">\n        <span>By Destination</span>\n      </button>\n      <button\n        on:click={() => changeMode(2)}\n        class:active={displayMode === 2}\n        class=\"inline-flex items-center transition-colors duration-300 ease-in\n        focus:outline-none rounded-r-full px-4 py-2\">\n        <span>By Status</span>\n      </button>\n    </div>\n    <div class=\"float-right\">\n      <button\n        on:click={download}\n        title=\"Download CSV\"\n        class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-1 px-1\n        rounded-lg inline-flex items-center\">\n        <Icon cssClass=\"\">\n          <path\n            d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n        </Icon>\n      </button>\n    </div>\n  </div>\n  {#if foundUnscannableLinks.length > 0}\n    <span class=\"font-bold mb-3\">\n      <Icon\n          on:click={() => hideShow()}\n          cssClass=\"inline-block cursor-pointer\">\n          {#if !hiddenRows}\n            <path d=\"M19 9l-7 7-7-7\" />\n          {:else}\n            <path d=\"M9 5l7 7-7 7\" />\n          {/if}\n        </Icon>\n      Found Unscannable Links:\n    </span>\n    {#if !hiddenRows}\n      <span class=\"font-bold mb-3\">\n        See our <a class=\"link hover:text-red-600\" href=\"https://github.com/SSWConsulting/SSW.CodeAuditor/wiki/SSW-CodeAuditor-Knowledge-Base-(KB)#known-websites-that-has-anti-web-scraping-measures\">Knowledge Base (KB)</a> to learn more about \n        why some working websites are reported as broken in CodeAuditor?\n      </span>\n      <table\n      class=\"table-fixed w-full md:table-auto mb-8\"\n      in:fade={{ y: 100, duration: 400 }}\n      out:fade={{ y: -100, duration: 200 }}>\n      <thead>\n        <tr>\n          <th class=\"w-3/12 px-4 py-2\">Unscannable Link</th>\n          <th class=\"w-3/12 px-4 py-2\">Source</th>\n          <th class=\"hidden md:table-cell w-3/12 px-4 py-2\">Anchor Text</th>\n        </tr>\n      </thead>\n      <tbody>\n        {#each foundUnscannableLinks as url}\n          <tr>\n            <td class=\"w-3/12 border px-4 py-2 break-all\">\n              <a\n                class=\"inline-block align-baseline link md:truncate\"\n                target=\"_blank\"\n                href={url.dst}>\n                {url.dst.length < 70 ? url.dst : url.dst.substring(0, 70) + '...'}\n              </a>\n            </td>\n            <td class=\"w-3/12 border px-4 py-2 break-all\">\n              <a\n                class=\"inline-block align-baseline link md:truncate\"\n                target=\"_blank\"\n                href={url.src}>\n                {url.src.length < 70 ? url.src : url.src.substring(0, 70) + '...'}\n              </a>\n            </td>\n            <td class=\"hidden md:table-cell w-3/12 border px-4 py-2 break-all\">{url.link || ''}</td>\n          </tr>\n          {/each}\n        </tbody>\n      </table>\n    {/if}\n  {/if}\n\n  {#if displayMode === 0}\n    <DetailsBySource {builds} on:ignore />\n  {:else if displayMode === 1}\n    <DetailsByDest {builds} on:ignore />\n  {:else}\n    <DetailsByReason {builds} on:ignore />\n  {/if}\n{/if}\n",
    "<style>\n.spinner {\n  width: 26px;\n  height: 26px;\n  background-color: #333;\n\n  border-radius: 100%;\n  -webkit-animation: sk-scaleout 1s infinite ease-in-out;\n  animation: sk-scaleout 1s infinite ease-in-out;\n}\n\n@-webkit-keyframes sk-scaleout {\n  0% {\n    -webkit-transform: scale(0);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    opacity: 0;\n  }\n}\n\n@keyframes sk-scaleout {\n  0% {\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    opacity: 0;\n  }\n}\n</style>\n\n<div class=\"spinner inline-block align-middle mx-1\" />\n",
    "<style>\n.spinner {\n  margin: 100px auto;\n  width: 50px;\n  height: 40px;\n  text-align: center;\n  font-size: 10px;\n}\n\n.spinner > div {\n  background-color: #333;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n\n  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;\n  animation: sk-stretchdelay 1.2s infinite ease-in-out;\n}\n\n.spinner .rect2 {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n\n.spinner .rect3 {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n\n.spinner .rect4 {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n\n.spinner .rect5 {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n\n@-webkit-keyframes sk-stretchdelay {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n  }\n}\n\n@keyframes sk-stretchdelay {\n  0%,\n  40%,\n  100% {\n    transform: scaleY(0.4);\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    transform: scaleY(1);\n    -webkit-transform: scaleY(1);\n  }\n}\n</style>\n\n<div class=\"spinner\">\n  <div class=\"rect1\" />\n  <div class=\"rect2\" />\n  <div class=\"rect3\" />\n  <div class=\"rect4\" />\n  <div class=\"rect5\" />\n</div>\n",
    "<script>\n  import LoadingCirle from \"./LoadingCircle.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  import Icon from \"./Icon.svelte\";\n  export let show;\n  export let header;\n  export let loading;\n  export let full = false;\n  export let mainAction;\n\n  const dispatch = createEventDispatcher();\n  const action = () => dispatch(\"action\");\n\n  const dismiss = () => {\n    dispatch(\"dismiss\");\n    show = false;\n  };\n\n  const handleKeydown = event => event.key === \"Escape\" && dismiss();\n</script>\n\n<style>\n.modal {\n  transition: opacity 0.2s ease;\n}\n.fullheight {\n  height: 90vh;\n}\n.modal-body {\n  height: 72vh;\n}\n</style>\n\n<!--Modal-->\n<div\n  class:opacity-0={!show}\n  class:pointer-events-none={!show}\n  class=\"modal opacity-0 pointer-events-none fixed w-full h-full top-0 left-0\n  flex items-center justify-center\">\n  <div\n    class=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\"\n    on:click={dismiss} />\n\n  <div\n    class={`modal-container bg-white w-11/12 md:${full ? 'max-w-6xl' : 'max-w-xl'} mx-auto rounded\n    shadow-lg z-50 overflow-y-auto`}>\n    <!-- Add margin if you want to see some of the overlay behind the modal-->\n    <div\n      class=\"modal-content py-4 text-left px-6\"\n      class:fullheight={full === true}>\n      <!--Title-->\n      <div class=\"flex justify-between items-center pb-3\">\n        <p class=\"text-2xl font-bold\">{header}</p>\n      </div>\n\n      <!--Body-->\n      <div class=\"modal-body py-5 overflow-y-auto\">\n        <slot />\n      </div>\n\n      <!--Footer-->\n      <div class=\"flex justify-end pt-2 mb-3\">\n        {#if mainAction}\n          <button\n            on:click={action}\n            type=\"button\"\n            class=\"bgred hover:bg-red-800 text-white font-semibold py-2 px-4\n            border hover:border-transparent rounded\">\n            {mainAction}\n            {#if loading}\n              <LoadingCirle />\n            {/if}\n          </button>\n        {/if}\n        <button\n          on:click={dismiss}\n          type=\"button\"\n          class=\"bgdark hover:bg-grey-800 font-semibold ml-1 text-white\n          hover:text-white py-2 px-4 border hover:border-transparent rounded\">\n          Close\n        </button>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n<svelte:window on:keydown={handleKeydown} />\n",
    "<script>\n  import firebase from \"firebase/compat/app\";\n  import \"firebase/compat/auth\";\n  import LoadingCirle from \"./LoadingCircle.svelte\";\n\n  let loading;\n  const login = promise => {\n    serverError = \"\";\n    loading = true;\n    return promise\n      .catch(err => (serverError = err.message))\n      .finally(() => (loading = false));\n  };\n\n  const loginGmail = () =>\n    login(\n      firebase.auth().signInWithRedirect(new firebase.auth.GoogleAuthProvider())\n    );\n\n  const loginFacebook = () =>\n    login(\n      firebase\n        .auth()\n        .signInWithRedirect(new firebase.auth.FacebookAuthProvider())\n    );\n\n  export let serverError;\n</script>\n\n<style>\n.social {\n  width: 270px;\n}\n</style>\n\n<div class=\"mb-2 mx-auto\">\n  <button\n    on:click|preventDefault={loginGmail}\n    type=\"button\"\n    disabled={loading}\n    class=\"social bg-white hover:bg-red-400 block hover:text-white py-2 px-4\n    border border-red-700 hover:border-transparent rounded\">\n    <svg\n      width=\"22\"\n      height=\"22\"\n      class=\"inline-block mr-1\"\n      viewBox=\"0 0 256 262\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"xMidYMid\">\n      <path\n        d=\"M255.878\n        133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45\n        12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023\n        2.685.268c24.659-22.774 38.875-56.282 38.875-96.027\"\n        fill=\"#4285F4\" />\n      <path\n        d=\"M130.55 261.1c35.248 0 64.839-11.605\n        86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257\n        13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527\n        1.465C35.393 231.798 79.49 261.1 130.55 261.1\"\n        fill=\"#34A853\" />\n      <path\n        d=\"M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994\n        1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644\n        0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782\"\n        fill=\"#FBBC05\" />\n      <path\n        d=\"M130.55 50.479c24.514 0 41.05 10.589 50.479\n        19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393\n        29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251\n        74.414-54.251\"\n        fill=\"#EB4335\" />\n    </svg>\n    Sign In Using Google\n    {#if loading}\n      <LoadingCirle />\n    {/if}\n  </button>\n</div>\n<div class=\"mb-4 mx-auto\">\n  <button\n    on:click|preventDefault={loginFacebook}\n    type=\"button\"\n    disabled={loading}\n    class=\"social bg-white hover:bg-blue-500 block hover:text-white py-2 px-4\n    border border-blue-700 hover:border-transparent rounded\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"22\"\n      height=\"22\"\n      class=\"inline-block\"\n      viewBox=\"88.428 12.828 107.543 207.085\">\n      <path\n        d=\"M158.232 219.912v-94.461h31.707l4.747-36.813h-36.454V65.134c0-10.658\n        2.96-17.922\n        18.245-17.922l19.494-.009V14.278c-3.373-.447-14.944-1.449-28.406-1.449-28.106\n        0-47.348 17.155-47.348\n        48.661v27.149H88.428v36.813h31.788v94.461l38.016-.001z\"\n        fill=\"#3c5a9a\" />\n    </svg>\n    Sign In Using Facebook\n    {#if loading}\n      <LoadingCirle />\n    {/if}\n  </button>\n</div>\n",
    "<style type=\"text/scss\">.loader {\n  --path: #2f3545;\n  --dot: #cc4141;\n  --duration: 3s;\n  width: 44px;\n  height: 44px;\n  position: relative;\n}\n.loader:before {\n  content: \"\";\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  position: absolute;\n  display: block;\n  background: var(--dot);\n  top: 37px;\n  left: 19px;\n  transform: translate(-18px, -18px);\n  animation: dotRect var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;\n}\n.loader svg {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n.loader svg rect,\n.loader svg polygon,\n.loader svg circle {\n  fill: none;\n  stroke: var(--path);\n  stroke-width: 10px;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n}\n.loader svg polygon {\n  stroke-dasharray: 145 76 145 76;\n  stroke-dashoffset: 0;\n  animation: pathTriangle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;\n}\n.loader svg rect {\n  stroke-dasharray: 192 64 192 64;\n  stroke-dashoffset: 0;\n  animation: pathRect 3s cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;\n}\n.loader svg circle {\n  stroke-dasharray: 150 50 150 50;\n  stroke-dashoffset: 75;\n  animation: pathCircle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;\n}\n.loader.triangle {\n  width: 48px;\n}\n.loader.triangle:before {\n  left: 21px;\n  transform: translate(-10px, -18px);\n  animation: dotTriangle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;\n}\n\n@keyframes pathTriangle {\n  33% {\n    stroke-dashoffset: 74;\n  }\n  66% {\n    stroke-dashoffset: 147;\n  }\n  100% {\n    stroke-dashoffset: 221;\n  }\n}\n@keyframes dotTriangle {\n  33% {\n    transform: translate(0, 0);\n  }\n  66% {\n    transform: translate(10px, -18px);\n  }\n  100% {\n    transform: translate(-10px, -18px);\n  }\n}\n@keyframes pathRect {\n  25% {\n    stroke-dashoffset: 64;\n  }\n  50% {\n    stroke-dashoffset: 128;\n  }\n  75% {\n    stroke-dashoffset: 192;\n  }\n  100% {\n    stroke-dashoffset: 256;\n  }\n}\n@keyframes dotRect {\n  25% {\n    transform: translate(0, 0);\n  }\n  50% {\n    transform: translate(18px, -18px);\n  }\n  75% {\n    transform: translate(0, -36px);\n  }\n  100% {\n    transform: translate(-18px, -18px);\n  }\n}\n@keyframes pathCircle {\n  25% {\n    stroke-dashoffset: 125;\n  }\n  50% {\n    stroke-dashoffset: 175;\n  }\n  75% {\n    stroke-dashoffset: 225;\n  }\n  100% {\n    stroke-dashoffset: 275;\n  }\n}\n.loader {\n  display: inline-block;\n  margin: 0 16px;\n}\n\nhtml {\n  -webkit-font-smoothing: antialiased;\n}\n\n* {\n  box-sizing: border-box;\n}\n*:before, *:after {\n  box-sizing: border-box;\n}\n\n.apploader {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.apploader .dribbble {\n  position: fixed;\n  display: block;\n  right: 20px;\n  bottom: 20px;\n}\n.apploader .dribbble img {\n  display: block;\n  height: 28px;\n}</style>\n\n<div class=\"container h-100\">\n  <div class=\"row align-items-center h-100\">\n    <div class=\"mx-auto\">\n      <div class=\"text-center\">\n        <div class=\"lead m-auto text-center apploader pt-2\">\n          <div class=\"loader\">\n            <svg viewBox=\"0 0 80 80\">\n              <circle id=\"test\" cx=\"40\" cy=\"40\" r=\"32\" />\n            </svg>\n          </div>\n\n          <div class=\"loader triangle\">\n            <svg viewBox=\"0 0 86 80\">\n              <polygon points=\"43 8 79 72 7 72\" />\n            </svg>\n          </div>\n\n          <div class=\"loader\">\n            <svg viewBox=\"0 0 80 80\">\n              <rect x=\"8\" y=\"8\" width=\"64\" height=\"64\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let label;\n  export let value = \"\";\n  export let errorMsg = \"\";\n  export let type = \"text\";\n  export let autocomplete = \"\";\n  export let required = true;\n  export let placeholder = \"\";\n\n  const enterKey = key => key.code === \"Enter\" && dispatch(\"enterKey\");\n  const handleInput = e => {\n    // in here, you can switch on type and implement\n    // whatever behaviour you need\n    value = type.match(/^(number|range)$/) ? +e.target.value : e.target.value;\n  };\n</script>\n\n<style>\ninput[type=\"range\"] {\n  -webkit-appearance: none;\n  margin: 18px 0;\n  width: 100%;\n}\ninput[type=\"range\"]:focus {\n  outline: none;\n}\ninput[type=\"range\"]::-webkit-slider-runnable-track {\n  width: 100%;\n  height: 8.4px;\n  cursor: pointer;\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  background: #8cb9dd;\n  border-radius: 1.3px;\n  border: 0.2px solid #010101;\n}\ninput[type=\"range\"]::-webkit-slider-thumb {\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  border: 1px solid #000000;\n  height: 36px;\n  width: 16px;\n  border-radius: 3px;\n  background: #ffffff;\n  cursor: pointer;\n  -webkit-appearance: none;\n  margin-top: -14px;\n}\ninput[type=\"range\"]:focus::-webkit-slider-runnable-track {\n  background: #367ebd;\n}\ninput[type=\"range\"]::-moz-range-track {\n  width: 100%;\n  height: 8.4px;\n  cursor: pointer;\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  background: #8cb9dd;\n  border-radius: 1.3px;\n  border: 0.2px solid #010101;\n}\ninput[type=\"range\"]::-moz-range-thumb {\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  border: 1px solid #000000;\n  height: 36px;\n  width: 16px;\n  border-radius: 3px;\n  background: #ffffff;\n  cursor: pointer;\n}\ninput[type=\"range\"]::-ms-track {\n  width: 100%;\n  height: 8.4px;\n  cursor: pointer;\n  background: transparent;\n  border-color: transparent;\n  border-width: 16px 0;\n  color: transparent;\n}\ninput[type=\"range\"]::-ms-fill-lower {\n  background: #8cb9dd;\n  border: 0.2px solid #010101;\n  border-radius: 2.6px;\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n}\ninput[type=\"range\"]::-ms-fill-upper {\n  background: #8cb9dd;\n  border: 0.2px solid #010101;\n  border-radius: 2.6px;\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n}\ninput[type=\"range\"]::-ms-thumb {\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  border: 1px solid #000000;\n  height: 36px;\n  width: 16px;\n  border-radius: 3px;\n  background: #ffffff;\n  cursor: pointer;\n}\ninput[type=\"range\"]:focus::-ms-fill-lower {\n  background: #8cb9dd;\n}\ninput[type=\"range\"]:focus::-ms-fill-upper {\n  background: #367ebd;\n}\n</style>\n\n<label\n  class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n  {label}\n</label>\n<input\n  class=\"appearance-none block w-full text-gray-700 border border-gray-300\n  rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white\n  focus:border-gray-500\"\n  {placeholder}\n  {autocomplete}\n  {value}\n  class:border-red-300={(required && !value) || errorMsg}\n  class:focus:border-red-500={(required && !value) || errorMsg}\n  on:input={handleInput}\n  on:keydown={enterKey}\n  {type} />\n\n{#if required && !value}\n  <p class=\"text-red-500 text-xs italic\">This field is required</p>\n{/if}\n\n{#if errorMsg && value}\n  <p class=\"text-red-500 text-xs italic\">{errorMsg}</p>\n{/if}\n",
    "<script>\n\texport let title;\n\texport let x;\n\texport let y;\n</script>\n<div style=\"\n\t\ttop: {y + 5}px;\n\t\tleft: {x + 5}px;\">{title}</div>\n\n<style>\ndiv {\n\tborder: 1px solid #ddd;\n\tbox-shadow: 1px 1px 1px #ddd;\n\tbackground: white;\n\tborder-radius: 4px;\n\tpadding: 4px;\n\tposition: absolute;\n}\n</style>",
    "<script>\n  import { ignoredUrls$ } from \"../../stores\";\n  import SelectField from \"./SelectField.svelte\";\n  import Toastr from \"./Toastr.svelte\";\n  import TextField from \"./TextField.svelte\";\n  import { Navigate } from \"svelte-router-spa\";\n  import { CONSTS } from \"../../utils/utils\";\n  import Modal from \"./Modal.svelte\";\n\n  export let url = 'https://';\n  export let scanUrl;\n  export let show;\n  export let user;\n\n  let ignoredUrls = [];\n\n  let ignoreOn = \"all\";\n  let ignoreDuration = 3;\n  let loading;\n  let addedSuccessToast;\n\n  const ignoreDurations = [\n    { value: 3, label: \"3 days\" },\n    { value: 7, label: \"1 week\" },\n    { value: 14, label: \"2 weeks\" },\n    { value: 30, label: \"1 month\" },\n    { value: -1, label: \"Permanently\" }\n  ];\n  const dismiss = () => (show = false);\n  const updateIgnore = async () => {\n    loading = true;\n    const res = await fetch(`${CONSTS.API}/api/config/${user.apiKey}/ignore`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        urlToIgnore: url,\n        ignoreOn,\n        ignoreDuration\n      }),\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n\n    ignoredUrls = await res.json();\n\n    if (res.ok) {\n      ignoredUrls$.set(ignoredUrls);\n      loading = false;\n      show = false;\n      addedSuccessToast = true;\n    } else {\n      throw new Error(\"Failed to load\");\n    }\n  };\n</script>\n\n<style>\ninput[type=\"radio\"] + label span {\n  transition: background 0.2s, transform 0.2s;\n}\n\ninput[type=\"radio\"] + label span:hover,\ninput[type=\"radio\"] + label:hover span {\n  transform: scale(1.2);\n}\n\ninput[type=\"radio\"]:checked + label span {\n  background-color: black;\n  box-shadow: 0px 0px 0px 2px white inset;\n}\n\ninput[type=\"radio\"]:checked + label {\n  color: #414141;\n}\n</style>\n\n<Modal\n  bind:show\n  bind:loading\n  header=\"Ignore the following URL\"\n  mainAction=\"Save\"\n  on:action={updateIgnore}\n  on:dismiss={dismiss}>\n  <div class=\"ml-5\">\n    <TextField bind:value={url} placeholder=\"\" label=\"URL\" type=\"text\" />\n    <div class=\"text-sm text-grey-400 py-3\">\n      You can use glob matching, e.g. https://twitter.com/** will match with\n      https://twitter.com/users/john or https://twitter.com/login\n    </div>\n    <div class=\"text-sm text-grey-400\">\n      To see more supported Glob patterns, check out \n      <a class=\"link hover:text-red-600\" href=\"https://github.com/SSWConsulting/SSW.CodeAuditor/wiki/SSW-CodeAuditor-Knowledge-Base-(KB)#supported-glob-patterns-when-adding-ignored-urls\">CodeAuditor KB</a>\n    </div>\n    <label class=\"block uppercase text-xs mb-2 py-2\">For</label>\n    <ul>\n      <li class=\"pb-3\">\n        <div class=\"flex items-center mr-4 mb-4\">\n          <input\n            id=\"radio1\"\n            type=\"radio\"\n            class=\"hidden\"\n            value={'all'}\n            bind:group={ignoreOn} />\n\n          <label for=\"radio1\" class=\"flex items-center cursor-pointer\">\n            <span\n              class=\"w-5 h-5 inline-block mr-2 rounded-full border-black\n              border-solid border flex-no-shrink\" />\n            All new builds\n          </label>\n        </div>\n      </li>\n      {#if scanUrl}\n        <li>\n          <div class=\"flex items-center mr-4 mb-4\">\n            <input\n              type=\"radio\"\n              class=\"hidden\"\n              id=\"radio2\"\n              bind:group={ignoreOn}\n              value={url} />\n            <label for=\"radio2\" class=\"flex items-center cursor-pointer\">\n              <span\n                class=\"w-5 h-5 inline-block mr-2 rounded-full border-black\n                border-solid border flex-no-shrink\" />\n              Only when {scanUrl} is scanned\n            </label>\n          </div>\n        </li>\n      {/if}\n    </ul>\n    <SelectField\n      bind:value={ignoreDuration}\n      label=\"Ignore Duration:\"\n      allowNull={false}\n      options={ignoreDurations} />\n  </div>\n</Modal>\n\n<Toastr bind:show={addedSuccessToast}>\n  <p class=\"font-bold\">Added to ignored list!</p>\n  <p class=\"text-sm\">\n    You currently have {ignoredUrls.length} ignored URLs.\n    <span\n      class=\"inline-block align-baseline font-bold text-sm text-blue\n      hover:text-blue-darker\">\n      <Navigate to=\"/home/settings\">View</Navigate>\n    </span>\n  </p>\n</Toastr>\n",
    "<script>\n  import { Route } from \"svelte-router-spa\";\n  import { Navigate, navigateTo } from \"svelte-router-spa\";\n  import { userSession, userName, isLoggedIn } from \"../stores.js\";\n  import { scale } from \"svelte/transition\";\n\n  export let currentRoute;\n\n  let menu = false;\n\n  const params = {};\n\n  const signOut = () => userSession.logout();\n\n  const showMenu = () => (menu = !menu);\n\n</script>\n\n<body class=\"flex flex-col min-h-screen \">\n<main class=\"flex-grow container mx-auto\">\n  <nav class=\"flex items-center justify-between p-6 mt-4 bgdark\">\n    <div class=\"flex flex-wrap\">\n      <div class=\"w-full\">\n        <div class=\"w-full block flex-grow lg:flex lg:items-center\">\n          <a href=\"/\" class=\"sm:w-4/4 lg:w-1/3 ml-2\">\n            <img\n              class=\"h-7 object-cover\"\n              src=\"https://github.com/SSWConsulting/SSW.Website/assets/67776356/f1467110-1677-4c76-a18e-3ffb6b3abcb9\"\n              alt=\"CodeAuditor\"\n            />\n          </a> \n          <div class=\"text-sm lg:flex-grow\" />\n          {#if $isLoggedIn}\n            <div>\n              <span class=\"text-white\">\n                <div class=\"relative\">\n                  <button\n                    on:click={showMenu}\n                    class=\"inline-block text-l px-4 py-2 leading-none border rounded\n                    text-white border-white hover:border-transparent hover:text-red-600\n                    hover:bg-white mt-4 lg:mt-0\"\n                    >{$userName}\n                  </button>\n                  {#if menu}\n                    <span\n                      in:scale={{ duration: 100, start: 0.95 }}\n                      out:scale={{ duration: 75, start: 0.95 }}\n                      class=\"origin-top-right absolute right-0 w-48 py-2 mt-10 rounded shadow-md\"\n                      style=\"background-color: #797979\"\n                    >\n                      <span\n                        on:click={() => navigateTo('/yourScan')}\n                        class=\"block px-4 py-2 cursor-pointer hover:bg-red-800\"\n                      >Your Scans</span>\n                      <span\n                        on:click={() => navigateTo('/home/settings')}\n                        class=\"block px-4 py-2 cursor-pointer hover:bg-red-800\"\n                      >Ignored URLs</span>\n                      <span\n                        on:click={signOut}\n                        class=\"block px-4 py-2 cursor-pointer hover:bg-red-800\"\n                        >Logout</span>\n                    </span>\n                  {/if}\n                </div>\n              </span>\n            </div>\n          {:else}\n            <div>\n              <span \n                class=\"text-white mx-2 cursor-pointer\"\n                on:click={() => navigateTo('/login')}\n              >Log In</span>\n              <button\n                on:click={() => navigateTo(\"/signup\")}\n                type=\"button\"\n                class=\"inline-block text-sm px-4 py-2 leading-none border rounded\n                text-white border-white hover:border-transparent hover:text-red-600\n                hover:bg-white mt-4 lg:mt-0 cursor-pointer\"\n              >\n                Sign Up\n              </button>\n            </div>\n          {/if}\n        </div>\n      </div>\n      <hr class=\"mt-4 bg-white w-full\">\n      <div class=\"w-full grid grid-cols-1 md:grid-cols-3 overflow-hidden text-center mt-4\">\n        <span class=\"text-white text-lg pt-4 lg:pt-0 lg:mx-4\">\n          <span class=\"hover:text-red-600 {currentRoute.path === '/home' ? 'text-red-600' : 'text-white'}\">        \n            <Navigate to=\"/home\">Home</Navigate>\n          </span>\n        </span>\n        <span class=\"text-white text-lg pt-4 lg:pt-0 lg:mx-4\">\n          <span class=\"hover:text-red-600 {currentRoute.path === '/explore' ? 'text-red-600' : 'text-white'}\">\n            <Navigate to=\"/explore\">Explore</Navigate> \n          </span>\n        </span>\n        <span class=\"text-white text-lg pt-4 lg:pt-0 lg:mx-4\">\n          <span class=\"hover:text-red-600 {currentRoute.path === '/rules' ? 'text-red-600' : 'text-white'}\">        \n            <Navigate to=\"/rules\">CodeAuditor Rules</Navigate>\n          </span>\n        </span>\n      </div>\n    </div>\n  </nav>\n  <Route {currentRoute} {params} />\n  </main>\n  <footer class=\"footer py-6 text-white md:py-4 lg:py-2 text-sm mt-16\" style=\"background-color: #414141\">\n    <section class=\"main-container\">\n      <div class=\"xl:mx-6\">\n        <div class=\"mx-6 flex flex-col-reverse md:flex-row justify-between\">\n          <div class=\"py-2\">\n            Copyright © SSW 1990 - {new Date().getFullYear()}. All Rights\n            Reserved.\n          </div>\n          <div class=\"w-full md:w-3/6 md:text-right py-2\">\n            <a\n              class=\"footer-link\"\n              href=\"https://github.com/SSWConsulting/SSW.CodeAuditor/issues\"\n            >\n              FEEDBACK TO SSW\n            </a>\n            <span class=\"px-2\">|</span>\n            <a\n              class=\"footer-link\"\n              href=\"https://www.ssw.com.au/ssw/Standards/Forms/ConsultingOrderTermsConditions.aspx\"\n            >\n              TERMS AND CONDITIONS\n            </a>\n            <span class=\"px-2\">|</span>\n            <a\n              class=\"footer-link footer-facebook\"\n              href=\"https://www.facebook.com/SSW.page\"\n            >\n              FIND US ON FACEBOOK\n            </a>\n          </div>\n        </div>\n        <hr class=\"border-gray-800 my-2\" />\n        <div class=\"flex flex-col md:flex-row justify-between mx-6\">\n          <div class=\"py-2\">\n            Our website is under\n            <a\n              class=\"footer-link\"\n              href=\"https://www.ssw.com.au/rules/rules-to-better-continuous-deployment-with-tfs\"\n            >\n              CONSTANT CONTINUOUS DEPLOYMENT.\n            </a>\n          </div>\n          <div class=\"md:text-right py-2\">\n            Powered by{\" \"}\n            <a\n              class=\"footer-link\"\n              href=\"https://rules.ssw.com.au/static-site-generator\"\n            >\n              {\" \"}\n              GitHub\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n  </footer>\n</body>\n\n<style>\n.brand {\n  color: white !important;\n}\nimg {\n  max-width: 100%;\n  height: auto;\n}\n</style>\n",
    "<script>\n  import { customHtmlHintRules, htmlHintRules, RuleType } from \"../utils/utils\";\n</script>\n<style>\n.link, .text {\n  color: black\n}\n</style>\n<div class=\"container mx-auto\">\n  <div class=\"bg-white shadow-lg rounded px-8 pt-6 pb-8 mb-4 flex flex-col\">\n    <article class=\"markdown-body\">\n      <h1>CodeAuditor Rules</h1>\n      <h2>SSW Rules</h2>\n      {#each customHtmlHintRules as rule, i}\n      <ol>\n        <li>\n          <a class=\"{rule.ruleLink ? 'link hover:text-red-600' : 'text cursor-text'} inline-block align-baseline\" href={rule.ruleLink}>\n            {i + 1}. \n            <i class=\"{rule.type === RuleType.Error ? 'fas fa-exclamation-circle fa-md' : 'fas fa-exclamation-triangle fa-md'}\" style=\"{rule.type === RuleType.Error ? 'color: red' : 'color: #d69e2e'}\"></i> \n            {rule.displayName}\n          </a>\n        </li>\n      </ol>\n    {/each}\n    </article>\n    <article class=\"markdown-body mt-6\">\n      <h2>HtmlHint Rules</h2>\n        {#each htmlHintRules as rule, i}\n        <ol>\n          <li>\n            <a class=\"inline-block align-baseline link hover:text-red-600\" href=\"https://htmlhint.com/docs/user-guide/rules/{rule.rule}\">\n              {i + 1}. \n              <i class=\"{rule.type === RuleType.Error ? 'fas fa-exclamation-circle fa-md' : 'fas fa-exclamation-triangle fa-md'}\" style=\"{rule.type === RuleType.Error ? 'color: red' : 'color: #d69e2e'}\"></i> \n              {rule.displayName}\n            </a>\n          </li>\n        </ol>\n        {/each}\n    </article>\n  </div>\n</div>"
  ],
  "names": [],
  "mappings": "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"
}